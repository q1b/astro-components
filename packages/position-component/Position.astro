---
export interface Props {
  class?: string;
  col?: boolean;
  reverse?: boolean;
  center?: boolean;
  top?: boolean;
  left?: boolean;
  bottom?: boolean;
  right?: boolean;
  stretch?: boolean;
  stretchX?: boolean;
  stretchY?: boolean;
  apart?: boolean | "loosely" | "closely";
}

let {
  center,
  col,
  apart,
  reverse,
  top,
  left,
  bottom,
  right,
  class: classStr,
  stretch,
  stretchX,
  stretchY,
} = Astro.props as Props;

if (col) {
  [top, left] = [left, top];
  [bottom, right] = [right, bottom];
  [stretchX, stretchY] = [stretchY, stretchX];
}

// code for direction
let dir='';

if (col && reverse) dir = "flex-col-reverse";
else if (!col && reverse) dir = "flex-row-reverse";
else if (col) dir = "flex-col";

let firstCls = "items-start";
let secondCls = "justify-start";

if (top && left) {
  firstCls = "items-start";
  secondCls = "justify-start";
} else if (top && right) {
  firstCls = "items-start";
  secondCls = "justify-end";
} else if (bottom && left) {
  firstCls = "items-end";
  secondCls = "justify-start";
} else if (bottom && right) {
  firstCls = "items-end";
  secondCls = "justify-end";
} else if (top) {
  firstCls = "items-start";
  secondCls = "justify-center";
} else if (left) {
  firstCls = "items-center";
  secondCls = "justify-start";
} else if (right) {
  firstCls = "items-center";
  secondCls = "justify-end";
} else if (bottom) {
  firstCls = "items-end";
  secondCls = "justify-center";
} else if (center && !top && !left && !right && !bottom) {
  firstCls = "items-center";
  secondCls = "justify-center";
} else {
  firstCls = "items-start";
  secondCls = "justify-center";
}

if (stretch || (stretchX && stretchY)) {
  firstCls = "items-stretch";
  secondCls = "[&>*]:grow";
  // return `${firstCls} ${secondCls}`
} else if (stretchX) {
  secondCls = "[&>*]:grow";
  if (apart) {
    if (apart === "closely") secondCls = "justify-evenly";
    else if (apart === "loosely") secondCls = "justify-around";
    else secondCls = "justify-between";
  }
} else if (stretchY) {
  firstCls = "items-stretch";
  if (apart) {
    if (apart === "closely") secondCls = "justify-evenly";
    else if (apart === "loosely") secondCls = "justify-around";
    else secondCls = "justify-between";
  }
} else {
  if (apart) {
    if (apart === "closely") secondCls = "justify-evenly";
    else if (apart === "loosely") secondCls = "justify-around";
    else secondCls = "justify-between";
  }
}

---

<style is:global>
    .flex {
        display: flex;
    }

    .flex-col {
        flex-direction: column;
    }

    .flex-row-reverse {
        flex-direction: row-reverse;
    }

    .flex-col-reverse {
        flex-direction: column-reverse;
    }

    .items-start {
        align-items: flex-start;
    }

    .items-end {
        align-items: flex-end;
    }

    .items-center {
        align-items: center;
    }

    .items-stretch {
        align-items: stretch;
    }

    .justify-start {
        justify-content: flex-start;
    }

    .justify-center {
        justify-content: center;
    }

    .justify-end {
        justify-content: flex-end;
    }

    .justify-between {
        justify-content: space-between;
    }

    .justify-around {
        justify-content: space-around;
    }

    .justify-evenly {
        justify-content: space-evenly;
    }

    @media (min-width: 640px) {
        .sm\:items-start {
            align-items: flex-start;
        }
    }

    .\[\&\>\*\]\:grow>* {
        flex-grow: 1;
    }
</style>

<div class={`flex ${dir} ${firstCls} ${secondCls} ${classStr}`}>
    <slot />
</div>
