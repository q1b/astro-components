---
import { smartypants } from "smartypants"
export interface Props {
    title?: string
    description?: string
    canonicalURL?: URL | string
    image?: string
    type?: "article" | "website"
}

const { canonicalURL = Astro.canonicalURL } = Astro.props

const image = new URL(Astro.props?.image || "./social.png", Astro.site)

const type = Astro.props?.type || "website"

const description =
    Astro.props?.description ||
    "Position Element for Positioning DOM-ELements in your UI, just not need to touch CSS or tailwindcss for positioning, except advance cases."

const title = [Astro.props?.title, "Position Astro Component | Position Element"]
    .filter(Boolean)
    .join(" | ")
---

<!-- Global Metadata -->
<meta charset="utf-8" />

<!-- Defining the current Language -->
<meta property="og:locale" content="en_US" />
<meta http-equiv="content-language" content="en-US" />
<meta name="language" content="English" />

<!-- Visuals like width,top-notch color -->
<meta name="viewport" content="width=device-width" />
<meta name="theme-color" content="#8D46E7" />
<link rel="icon" href="/favicon.ico" sizes="any" />
<link rel="icon" href="/favicon.svg" type="image/svg+xml" />
<!-- <link rel="mask-icon" href="/favicon.svg" color="#8D46E7"> -->
<link rel="sitemap" href="/sitemap-index.xml" />
<!-- <link rel="alternate" type="application/rss+xml" href="/rss.xml" title="RSS" /> -->
<meta name="color-scheme" content="dark light" />

<!-- Preload -->
<slot name="preload"></slot>

<!--  blog counts as an OG type of "article", not "website" -->
<meta property="og:type" content={type} />

<!-- Title Ex. <meta name="twitter:title" content="Blogging for Devs: Free Email Course &amp; Newsletter"> -->
<!-- Description Ex. <meta name="twitter:description" content="Learn how to write content that reaches thousands without an existing audience."> -->

<!-- Meta Tags Responsible for Title for the Page -->
<title set:html={smartypants(title, 1)}></title>
<meta name="apple-mobile-web-app-title" content={title} />
<meta name="page-subject" content={title} />
<meta name="title" content={title} />
<meta property="og:site_name" content={title} />

<meta property="og:title" content={title} />
<meta property="twitter:title" content={title} />

<!-- Meta Tags Responsible for description of your site -->
<meta name="description" content={description} />
<meta property="og:description" content={description} />
<meta property="twitter:description" content={description} />
<meta name="summary" content={description} />

<!-- Google SEO Verification -->
<meta name="google-site-verification" content="bwJjTxvLgncfWt0W9tyZIwCg5-aGdsBRudwkFqZV--8" />

<meta name="revised" content={new Date().toUTCString()} />
<meta property="article:modified_time" content={new Date().toUTCString()} />

<link rel="canonical" href={canonicalURL} />

<!-- Open Graph / Facebook -->
<meta property="og:url" content={canonicalURL} />
<meta property="og:image" content={image} />
<meta property="og:image:alt" content="Banner for site, showing page title in a playful way" />
<meta property="og:image:secure_url" content={image} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:image" content={image} />

<meta name="author" content="Sukhpreet Singh, sukhpreetben10@gmail.com" />
<meta property="twitter:site" content="@XSukhpreet" />
<meta property="twitter:site:id" content="@XSukhpreet" />
<meta property="twitter:creator" content="@XSukhpreet" />
<meta property="twitter:creator:id" content="@XSukhpreet" />

<!-- <meta name="twitter:creator" content="@monicalent">
<meta property="twitter:creator:id" content="13334762"> -->
<meta name="creator" content="@XSukhpreet" />
<meta name="publisher" content="XSukhpreet" />

<!-- Assets -->
<slot name="assets"></slot>

<!-- Avoiding Foc -->

<script>
    if (
        localStorage.getItem("theme-preference") === "dark" ||
        (!("theme-preference" in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
    )
        document.documentElement.classList.add("dark")
    else document.documentElement.classList.remove("dark")

    // // set early so no page flashes / CSS is made aware
    // reflectPreference()

    window.onload = () => {
        // set on load so screen readers can see latest value on the button
        if (
            localStorage.getItem("theme-preference") === "dark" ||
            (!("theme-preference" in localStorage) &&
                window.matchMedia("(prefers-color-scheme: dark)").matches)
        )
            document.documentElement.classList.add("dark")
        else document.documentElement.classList.remove("dark")
    }
</script>
<!--
<script type="module" hoist>
    import listen from "micromorph/spa"
    listen({ beforeDiff: () => {
      window.dispatchEvent(new CustomEvent('astro:navchange'))
    } })
</script>
-->

<!-- <meta content="max-snippet:-1, max-image-preview:large, max-video-preview:-1" name="robots"> -->
